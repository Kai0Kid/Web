[["Map",1,2,9,10,28,29],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.3.0","content-config-digest","078f281ad298c4ba","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://kai0kid.vercel.app\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":3000,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark-default\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null],\"rehypePlugins\":[null,null,[null,{\"behavior\":\"prepend\"}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","specs",["Map",11,12],"about",{"id":11,"data":13,"body":17,"filePath":18,"digest":19,"rendered":20},{"readingMetadata":14},{"time":15,"wordCount":16},1,22,"# Special thanks to:\r\n\r\n- [Hexo Shoka theme](https://github.com/amehime/hexo-theme-shoka) for providing design inspiration\r\n\r\n- [Astro Fuwari template](https://github.com/saicaca/fuwari) for providing the main design concept and part of the implementation","src/contents/specs/about.md","5eedd2ecb7c1fc74",{"html":21,"metadata":22},"\u003Ch1 id=\"special-thanks-to\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#special-thanks-to\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Special thanks to:\u003C/h1>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://github.com/amehime/hexo-theme-shoka\">Hexo Shoka theme\u003C/a> for providing design inspiration\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://github.com/saicaca/fuwari\">Astro Fuwari template\u003C/a> for providing the main design concept and part of the implementation\u003C/p>\n\u003C/li>\n\u003C/ul>",{"headings":23,"imagePaths":27,"frontmatter":13},[24],{"depth":15,"slug":25,"text":26},"special-thanks-to","Special thanks to:",[],"posts",["Map",30,31,61,62,96,97],"video",{"id":30,"data":32,"body":41,"filePath":42,"digest":43,"rendered":44},{"title":33,"published":34,"draft":35,"description":36,"tags":37,"category":40},"Include Video in the Posts",["Date","2022-08-01T00:00:00.000Z"],false,"This post demonstrates how to include embedded video in a blog post.",[38,39],"Example","Video","Examples","Just copy the embed code from YouTube or other platforms, and paste it in the markdown file.\r\n\r\n```yaml\r\n---\r\ntitle: Include Video in the Post\r\npublished: 2023-10-19\r\n// ...\r\n---\r\n\r\n\u003Ciframe width=\"100%\" height=\"468\" src=\"https://www.youtube.com/embed/5gIf0_xpFPI?si=N1WTorLKL0uwLsU_\" title=\"YouTube video player\" frameborder=\"0\" allowfullscreen>\u003C/iframe>\r\n```\r\n## YouTube\r\n\r\n\u003Ciframe width=\"100%\" height=\"468\" src=\"https://www.youtube.com/embed/5gIf0_xpFPI?si=N1WTorLKL0uwLsU_\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\u003C/iframe>\r\n\r\n## Bilibili\r\n\r\n\u003Ciframe width=\"100%\" height=\"468\" src=\"//player.bilibili.com/player.html?bvid=BV1fK4y1s7Qf&p=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> \u003C/iframe>","src/contents/posts/video.md","05a5f095dbc8ff45",{"html":45,"metadata":46},"\u003Cp>Just copy the embed code from YouTube or other platforms, and paste it in the markdown file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79C0FF\">---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7EE787\">title\u003C/span>\u003Cspan style=\"color:#E6EDF3\">: \u003C/span>\u003Cspan style=\"color:#A5D6FF\">Include Video in the Post\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7EE787\">published\u003C/span>\u003Cspan style=\"color:#E6EDF3\">: \u003C/span>\u003Cspan style=\"color:#79C0FF\">2023-10-19\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#A5D6FF\">// ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79C0FF\">---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#A5D6FF\">&#x3C;iframe width=\"100%\" height=\"468\" src=\"https://www.youtube.com/embed/5gIf0_xpFPI?si=N1WTorLKL0uwLsU_\" title=\"YouTube video player\" frameborder=\"0\" allowfullscreen>&#x3C;/iframe>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"youtube\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#youtube\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>YouTube\u003C/h2>\n\u003Ciframe width=\"100%\" height=\"468\" src=\"https://www.youtube.com/embed/5gIf0_xpFPI?si=N1WTorLKL0uwLsU_\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\u003C/iframe>\n\u003Ch2 id=\"bilibili\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#bilibili\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Bilibili\u003C/h2>\n\u003Ciframe width=\"100%\" height=\"468\" src=\"//player.bilibili.com/player.html?bvid=BV1fK4y1s7Qf&#x26;p=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> \u003C/iframe>",{"headings":47,"imagePaths":55,"frontmatter":56},[48,52],{"depth":49,"slug":50,"text":51},2,"youtube","YouTube",{"depth":49,"slug":53,"text":54},"bilibili","Bilibili",[],{"title":33,"published":57,"description":36,"tags":58,"category":40,"draft":35,"readingMetadata":59},["Date","2022-08-01T00:00:00.000Z"],[38,39],{"time":15,"wordCount":60},61,"markdown",{"id":61,"data":63,"body":70,"filePath":71,"digest":72,"rendered":73},{"title":64,"published":65,"draft":35,"description":66,"tags":67,"category":40},"Markdown Example",["Date","2023-10-01T00:00:00.000Z"],"A simple example of a Markdown blog post.",[68,69],"Markdown","Blogging","# An h1 header\r\n\r\nParagraphs are separated by a blank line.\r\n\r\n2nd paragraph. _Italic_, **bold**, and `monospace`. Itemized lists\r\nlook like:\r\n\r\n- this one\r\n- that one\r\n- the other one\r\n\r\nNote that --- not considering the asterisk --- the actual text\r\ncontent starts at 4-columns in.\r\n\r\n> Block quotes are\r\n> written like so.\r\n>\r\n> They can span multiple paragraphs,\r\n> if you like.\r\n\r\nUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\r\nin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\r\nUnicode is supported. ☺\r\n\r\n## An h2 header\r\n\r\nHere's a numbered list:\r\n\r\n1. first item\r\n2. second item\r\n3. third item\r\n\r\nNote again how the actual text starts at 4 columns in (4 characters\r\nfrom the left side). Here's a code sample:\r\n\r\n    # Let me re-iterate ...\r\n    for i in 1 .. 10 { do-something(i) }\r\n\r\nAs you probably guessed, indented 4 spaces. By the way, instead of\r\nindenting the block, you can use delimited blocks, if you like:\r\n\r\n```\r\ndefine foobar() {\r\n    print \"Welcome to flavor country!\";\r\n}\r\n```\r\n\r\n(which makes copying & pasting easier). You can optionally mark the\r\ndelimited block for Pandoc to syntax highlight it:\r\n\r\n```python\r\nimport time\r\n# Quick, count to ten!\r\nfor i in range(10):\r\n    # (but not *too* quick)\r\n    time.sleep(0.5)\r\n    print i\r\n```\r\n\r\n### An h3 header\r\n\r\nNow a nested list:\r\n\r\n1.  First, get these ingredients:\r\n\r\n    - carrots\r\n    - celery\r\n    - lentils\r\n\r\n2.  Boil some water.\r\n\r\n3.  Dump everything in the pot and follow\r\n    this algorithm:\r\n\r\n        find wooden spoon\r\n        uncover pot\r\n        stir\r\n        cover pot\r\n        balance wooden spoon precariously on pot handle\r\n        wait 10 minutes\r\n        goto first step (or shut off burner when done)\r\n\r\n    Do not bump wooden spoon or it will fall.\r\n\r\nNotice again how text always lines up on 4-space indents (including\r\nthat last line which continues item 3 above).\r\n\r\nHere's a link to [a website](http://foo.bar), to a [local\r\ndoc](local-doc.html), and to a [section heading in the current\r\ndoc](#an-h2-header). Here's a footnote [^1].\r\n\r\n[^1]: Footnote text goes here.\r\n\r\nTables can look like this:\r\n\r\nsize material color\r\n\r\n---\r\n\r\n9 leather brown\r\n10 hemp canvas natural\r\n11 glass transparent\r\n\r\nTable: Shoes, their sizes, and what they're made of\r\n\r\n(The above is the caption for the table.) Pandoc also supports\r\nmulti-line tables:\r\n\r\n---\r\n\r\nkeyword text\r\n\r\n---\r\n\r\nred Sunsets, apples, and\r\nother red or reddish\r\nthings.\r\n\r\ngreen Leaves, grass, frogs\r\nand other things it's\r\nnot easy being.\r\n\r\n---\r\n\r\nA horizontal rule follows.\r\n\r\n---\r\n\r\nHere's a definition list:\r\n\r\napples\r\n: Good for making applesauce.\r\noranges\r\n: Citrus!\r\ntomatoes\r\n: There's no \"e\" in tomatoe.\r\n\r\nAgain, text is indented 4 spaces. (Put a blank line between each\r\nterm/definition pair to spread things out more.)\r\n\r\nHere's a \"line block\":\r\n\r\n| Line one\r\n| Line too\r\n| Line tree\r\n\r\nand images can be specified like so:\r\n\r\n[//]: # '![example image](./demo-banner.png \"An exemplary image\")'\r\n\r\nInline math equations go in like so: $\\omega = d\\phi / dt$. Display\r\nmath should get its own line and be put in in double-dollarsigns:\r\n\r\n$$I = \\int \\rho R^{2} dV$$\r\n\r\nAnd note that you can backslash-escape any punctuation characters\r\nwhich you wish to be displayed literally, ex.: \\`foo\\`, \\*bar\\*, etc.","src/contents/posts/markdown.md","a9d330f3752cfe95",{"html":74,"metadata":75},"\u003Ch1 id=\"an-h1-header\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#an-h1-header\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>An h1 header\u003C/h1>\n\u003Cp>Paragraphs are separated by a blank line.\u003C/p>\n\u003Cp>2nd paragraph. \u003Cem>Italic\u003C/em>, \u003Cstrong>bold\u003C/strong>, and \u003Ccode>monospace\u003C/code>. Itemized lists\r\nlook like:\u003C/p>\n\u003Cul>\n\u003Cli>this one\u003C/li>\n\u003Cli>that one\u003C/li>\n\u003Cli>the other one\u003C/li>\n\u003C/ul>\n\u003Cp>Note that --- not considering the asterisk --- the actual text\r\ncontent starts at 4-columns in.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Block quotes are\r\nwritten like so.\u003C/p>\n\u003Cp>They can span multiple paragraphs,\r\nif you like.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all\r\nin chapters 12—14”). Three dots … will be converted to an ellipsis.\r\nUnicode is supported. ☺\u003C/p>\n\u003Ch2 id=\"an-h2-header\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#an-h2-header\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>An h2 header\u003C/h2>\n\u003Cp>Here’s a numbered list:\u003C/p>\n\u003Col>\n\u003Cli>first item\u003C/li>\n\u003Cli>second item\u003C/li>\n\u003Cli>third item\u003C/li>\n\u003C/ol>\n\u003Cp>Note again how the actual text starts at 4 columns in (4 characters\r\nfrom the left side). Here’s a code sample:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan># Let me re-iterate ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>for i in 1 .. 10 { do-something(i) }\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>As you probably guessed, indented 4 spaces. By the way, instead of\r\nindenting the block, you can use delimited blocks, if you like:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>define foobar() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    print \"Welcome to flavor country!\";\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>(which makes copying &#x26; pasting easier). You can optionally mark the\r\ndelimited block for Pandoc to syntax highlight it:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF7B72\">import\u003C/span>\u003Cspan style=\"color:#E6EDF3\"> time\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8B949E\"># Quick, count to ten!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF7B72\">for\u003C/span>\u003Cspan style=\"color:#E6EDF3\"> i \u003C/span>\u003Cspan style=\"color:#FF7B72\">in\u003C/span>\u003Cspan style=\"color:#79C0FF\"> range\u003C/span>\u003Cspan style=\"color:#E6EDF3\">(\u003C/span>\u003Cspan style=\"color:#79C0FF\">10\u003C/span>\u003Cspan style=\"color:#E6EDF3\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8B949E\">    # (but not *too* quick)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E6EDF3\">    time.sleep(\u003C/span>\u003Cspan style=\"color:#79C0FF\">0.5\u003C/span>\u003Cspan style=\"color:#E6EDF3\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79C0FF\">    print\u003C/span>\u003Cspan style=\"color:#E6EDF3\"> i\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"an-h3-header\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#an-h3-header\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>An h3 header\u003C/h3>\n\u003Cp>Now a nested list:\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>First, get these ingredients:\u003C/p>\n\u003Cul>\n\u003Cli>carrots\u003C/li>\n\u003Cli>celery\u003C/li>\n\u003Cli>lentils\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Boil some water.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Dump everything in the pot and follow\r\nthis algorithm:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>find wooden spoon\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>uncover pot\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>stir\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>cover pot\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>balance wooden spoon precariously on pot handle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>wait 10 minutes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>goto first step (or shut off burner when done)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Do not bump wooden spoon or it will fall.\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003Cp>Notice again how text always lines up on 4-space indents (including\r\nthat last line which continues item 3 above).\u003C/p>\n\u003Cp>Here’s a link to \u003Ca href=\"http://foo.bar\">a website\u003C/a>, to a \u003Ca href=\"local-doc.html\">local\r\ndoc\u003C/a>, and to a \u003Ca href=\"#an-h2-header\">section heading in the current\r\ndoc\u003C/a>. Here’s a footnote \u003Csup>\u003Ca href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1\u003C/a>\u003C/sup>.\u003C/p>\n\u003Cp>Tables can look like this:\u003C/p>\n\u003Cp>size material color\u003C/p>\n\u003Chr>\n\u003Cp>9 leather brown\r\n10 hemp canvas natural\r\n11 glass transparent\u003C/p>\n\u003Cp>Table: Shoes, their sizes, and what they’re made of\u003C/p>\n\u003Cp>(The above is the caption for the table.) Pandoc also supports\r\nmulti-line tables:\u003C/p>\n\u003Chr>\n\u003Cp>keyword text\u003C/p>\n\u003Chr>\n\u003Cp>red Sunsets, apples, and\r\nother red or reddish\r\nthings.\u003C/p>\n\u003Cp>green Leaves, grass, frogs\r\nand other things it’s\r\nnot easy being.\u003C/p>\n\u003Chr>\n\u003Cp>A horizontal rule follows.\u003C/p>\n\u003Chr>\n\u003Cp>Here’s a definition list:\u003C/p>\n\u003Cp>apples\r\n: Good for making applesauce.\r\noranges\r\n: Citrus!\r\ntomatoes\r\n: There’s no “e” in tomatoe.\u003C/p>\n\u003Cp>Again, text is indented 4 spaces. (Put a blank line between each\r\nterm/definition pair to spread things out more.)\u003C/p>\n\u003Cp>Here’s a “line block”:\u003C/p>\n\u003Cp>| Line one\r\n| Line too\r\n| Line tree\u003C/p>\n\u003Cp>and images can be specified like so:\u003C/p>\n\u003Cp>Inline math equations go in like so: \u003Cspan class=\"katex\">\u003Cspan class=\"katex-mathml\">\u003Cmath xmlns=\"http://www.w3.org/1998/Math/MathML\">\u003Csemantics>\u003Cmrow>\u003Cmi>ω\u003C/mi>\u003Cmo>=\u003C/mo>\u003Cmi>d\u003C/mi>\u003Cmi>ϕ\u003C/mi>\u003Cmi mathvariant=\"normal\">/\u003C/mi>\u003Cmi>d\u003C/mi>\u003Cmi>t\u003C/mi>\u003C/mrow>\u003Cannotation encoding=\"application/x-tex\">\\omega = d\\phi / dt\u003C/annotation>\u003C/semantics>\u003C/math>\u003C/span>\u003Cspan class=\"katex-html\" aria-hidden=\"true\">\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.4306em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2778em;\">\u003C/span>\u003Cspan class=\"mrel\">=\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2778em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\">d\u003C/span>\u003Cspan class=\"mord mathnormal\">ϕ\u003C/span>\u003Cspan class=\"mord\">/\u003C/span>\u003Cspan class=\"mord mathnormal\">d\u003C/span>\u003Cspan class=\"mord mathnormal\">t\u003C/span>\u003C/span>\u003C/span>\u003C/span>. Display\r\nmath should get its own line and be put in in double-dollarsigns:\u003C/p>\n\u003Cp>\u003Cspan class=\"katex\">\u003Cspan class=\"katex-mathml\">\u003Cmath xmlns=\"http://www.w3.org/1998/Math/MathML\">\u003Csemantics>\u003Cmrow>\u003Cmi>I\u003C/mi>\u003Cmo>=\u003C/mo>\u003Cmo>∫\u003C/mo>\u003Cmi>ρ\u003C/mi>\u003Cmsup>\u003Cmi>R\u003C/mi>\u003Cmn>2\u003C/mn>\u003C/msup>\u003Cmi>d\u003C/mi>\u003Cmi>V\u003C/mi>\u003C/mrow>\u003Cannotation encoding=\"application/x-tex\">I = \\int \\rho R^{2} dV\u003C/annotation>\u003C/semantics>\u003C/math>\u003C/span>\u003Cspan class=\"katex-html\" aria-hidden=\"true\">\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.6833em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2778em;\">\u003C/span>\u003Cspan class=\"mrel\">=\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2778em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:1.1202em;vertical-align:-0.3061em;\">\u003C/span>\u003Cspan class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0006em;\">∫\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.1667em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\">ρ\u003C/span>\u003Cspan class=\"mord\">\u003Cspan class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R\u003C/span>\u003Cspan class=\"msupsub\">\u003Cspan class=\"vlist-t\">\u003Cspan class=\"vlist-r\">\u003Cspan class=\"vlist\" style=\"height:0.8141em;\">\u003Cspan style=\"top:-3.063em;margin-right:0.05em;\">\u003Cspan class=\"pstrut\" style=\"height:2.7em;\">\u003C/span>\u003Cspan class=\"sizing reset-size6 size3 mtight\">\u003Cspan class=\"mord mtight\">\u003Cspan class=\"mord mtight\">2\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"mord mathnormal\">d\u003C/span>\u003Cspan class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/p>\n\u003Cp>And note that you can backslash-escape any punctuation characters\r\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.\u003C/p>\n\u003Csection data-footnotes=\"\" class=\"footnotes\">\u003Ch2 class=\"sr-only\" id=\"footnote-label\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#footnote-label\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Footnotes\u003C/h2>\n\u003Col>\n\u003Cli id=\"user-content-fn-1\">\n\u003Cp>Footnote text goes here. \u003Ca href=\"#user-content-fnref-1\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">↩\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/section>",{"headings":76,"imagePaths":90,"frontmatter":91},[77,80,83,87],{"depth":15,"slug":78,"text":79},"an-h1-header","An h1 header",{"depth":49,"slug":81,"text":82},"an-h2-header","An h2 header",{"depth":84,"slug":85,"text":86},3,"an-h3-header","An h3 header",{"depth":49,"slug":88,"text":89},"footnote-label","Footnotes",[],{"title":64,"published":92,"description":66,"tags":93,"category":40,"draft":35,"readingMetadata":94},["Date","2023-10-01T00:00:00.000Z"],[68,69],{"time":49,"wordCount":95},438,"markdown-tutorial",{"id":96,"data":98,"body":105,"filePath":106,"assetImports":107,"digest":109,"rendered":110},{"title":99,"published":100,"draft":35,"description":66,"tags":101,"category":40,"author":102,"sourceLink":103,"licenseName":104},"Markdown Tutorial",["Date","2025-01-20T00:00:00.000Z"],[68,69],"emn178","https://github.com/emn178/markdown","Unlicensed","# Markdown Tutorial\r\n\r\nA markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF).\r\n\r\n- [Block Elements](#block-elements)\r\n  - [Paragraphs and Line Breaks](#paragraphs-and-line-breaks)\r\n  - [Headers](#headers)\r\n  - [Blockquotes](#blockquotes)\r\n  - [Lists](#lists)\r\n  - [Code Blocks](#code-blocks)\r\n  - [Horizontal Rules](#horizontal-rules)\r\n  - [Table](#table)\r\n- [Span Elements](#span-elements)\r\n  - [Links](#links)\r\n  - [Emphasis](#emphasis)\r\n  - [Code](#code)\r\n  - [Images](#images)\r\n  - [Strikethrough](#strikethrough)\r\n- [Miscellaneous](#miscellaneous)\r\n  - [Automatic Links](#automatic-links)\r\n  - [Backslash Escapes](#backslash-escapes)\r\n- [Inline HTML](#inline-html)\r\n\r\n## Block Elements\r\n\r\n### Paragraphs and Line Breaks\r\n\r\n#### Paragraphs\r\n\r\nHTML Tag: `\u003Cp>`\r\n\r\nOne or more blank lines. (A blank line is a line containing nothing but **spaces** or **tabs** is considered blank.)\r\n\r\nCode:\r\n\r\n    This will be\r\n    inline.\r\n\r\n    This is second paragraph.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nThis will be\r\ninline.\r\n\r\nThis is second paragraph.\r\n\r\n---\r\n\r\n#### Line Breaks\r\n\r\nHTML Tag: `\u003Cbr />`\r\n\r\nEnd a line with **two or more spaces**.\r\n\r\nCode:\r\n\r\n    This will be not\r\n    inline.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nThis will be not  \r\ninline.\r\n\r\n---\r\n\r\n### Headers\r\n\r\nMarkdown supports two styles of headers, Setext and atx.\r\n\r\n#### Setext\r\n\r\nHTML Tags: `\u003Ch1>`, `\u003Ch2>`\r\n\r\n“Underlined” using **equal signs (=)** as `\u003Ch1>` and **dashes (-)** as `\u003Ch2>` in any number.\r\n\r\nCode:\r\n\r\n    This is an H1\r\n    =============\r\n    This is an H2\r\n    -------------\r\n\r\nPreview:\r\n\r\n---\r\n\r\n# This is an H1\r\n\r\n## This is an H2\r\n\r\n---\r\n\r\n#### atx\r\n\r\nHTML Tags: `\u003Ch1>`, `\u003Ch2>`, `\u003Ch3>`, `\u003Ch4>`, `\u003Ch5>`, `\u003Ch6>`\r\n\r\nUses 1-6 **hash characters (#)** at the start of the line, corresponding to `\u003Ch1>` - `\u003Ch6>`.\r\n\r\nCode:\r\n\r\n    # This is an H1\r\n    ## This is an H2\r\n    ###### This is an H6\r\n\r\nPreview:\r\n\r\n---\r\n\r\n# This is an H1\r\n\r\n## This is an H2\r\n\r\n###### This is an H6\r\n\r\n---\r\n\r\nOptionally, you may “close” atx-style headers. The closing hashes **don’t need to match** the number of hashes used to open the header.\r\n\r\nCode:\r\n\r\n    # This is an H1 #\r\n    ## This is an H2 ##\r\n    ### This is an H3 ######\r\n\r\nPreview:\r\n\r\n---\r\n\r\n# This is an H1\r\n\r\n## This is an H2\r\n\r\n### This is an H3\r\n\r\n---\r\n\r\n### Blockquotes\r\n\r\nHTML Tag: `\u003Cblockquote>`\r\n\r\nMarkdown uses email-style **>** characters for blockquoting. It looks best if you hard wrap the text and put a > before every line.\r\n\r\nCode:\r\n\r\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n    >\r\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n    > id sem consectetuer libero luctus adipiscing.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n>\r\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n> id sem consectetuer libero luctus adipiscing.\r\n\r\n---\r\n\r\nMarkdown allows you to be lazy and only put the > before the first line of a hard-wrapped paragraph.\r\n\r\nCode:\r\n\r\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n\r\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n    id sem consectetuer libero luctus adipiscing.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\r\n\r\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\n> id sem consectetuer libero luctus adipiscing.\r\n\r\n---\r\n\r\nBlockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of >.\r\n\r\nCode:\r\n\r\n    > This is the first level of quoting.\r\n    >\r\n    > > This is nested blockquote.\r\n    >\r\n    > Back to the first level.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n> This is the first level of quoting.\r\n>\r\n> > This is nested blockquote.\r\n>\r\n> Back to the first level.\r\n\r\n---\r\n\r\nBlockquotes can contain other Markdown elements, including headers, lists, and code blocks.\r\n\r\nCode:\r\n\r\n    > ## This is a header.\r\n    >\r\n    > 1.   This is the first list item.\r\n    > 2.   This is the second list item.\r\n    >\r\n    > Here's some example code:\r\n    >\r\n    >     return shell_exec(\"echo $input | $markdown_script\");\r\n\r\nPreview:\r\n\r\n---\r\n\r\n> ## This is a header.\r\n>\r\n> 1.  This is the first list item.\r\n> 2.  This is the second list item.\r\n>\r\n> Here's some example code:\r\n>\r\n>     return shell_exec(\"echo $input | $markdown_script\");\r\n\r\n---\r\n\r\n### Lists\r\n\r\nMarkdown supports ordered (numbered) and unordered (bulleted) lists.\r\n\r\n#### Unordered\r\n\r\nHTML Tag: `\u003Cul>`\r\n\r\nUnordered lists use **asterisks (\\*)**, **pluses (+)**, and **hyphens (-)**.\r\n\r\nCode:\r\n\r\n    *   Red\r\n    *   Green\r\n    *   Blue\r\n\r\nPreview:\r\n\r\n---\r\n\r\n- Red\r\n- Green\r\n- Blue\r\n\r\n---\r\n\r\nis equivalent to:\r\n\r\nCode:\r\n\r\n    +   Red\r\n    +   Green\r\n    +   Blue\r\n\r\nand:\r\n\r\nCode:\r\n\r\n    -   Red\r\n    -   Green\r\n    -   Blue\r\n\r\n#### Ordered\r\n\r\nHTML Tag: `\u003Col>`\r\n\r\nOrdered lists use numbers followed by periods:\r\n\r\nCode:\r\n\r\n    1.  Bird\r\n    2.  McHale\r\n    3.  Parish\r\n\r\nPreview:\r\n\r\n---\r\n\r\n1.  Bird\r\n2.  McHale\r\n3.  Parish\r\n\r\n---\r\n\r\nIt’s possible to trigger an ordered list by accident, by writing something like this:\r\n\r\nCode:\r\n\r\n    1986. What a great season.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n1986. What a great season.\r\n\r\n---\r\n\r\nYou can **backslash-escape (\\\\)** the period:\r\n\r\nCode:\r\n\r\n    1986\\. What a great season.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n1986\\. What a great season.\r\n\r\n---\r\n\r\n#### Indented\r\n\r\n##### Blockquote\r\n\r\nTo put a blockquote within a list item, the blockquote’s > delimiters need to be indented:\r\n\r\nCode:\r\n\r\n    *   A list item with a blockquote:\r\n\r\n        > This is a blockquote\r\n        > inside a list item.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n- A list item with a blockquote:\r\n\r\n  > This is a blockquote\r\n  > inside a list item.\r\n\r\n---\r\n\r\n##### Code Block\r\n\r\nTo put a code block within a list item, the code block needs to be indented twice — **8 spaces** or **two tabs**:\r\n\r\nCode:\r\n\r\n    *   A list item with a code block:\r\n\r\n            \u003Ccode goes here>\r\n\r\nPreview:\r\n\r\n---\r\n\r\n- A list item with a code block:\r\n\r\n      \u003Ccode goes here>\r\n\r\n---\r\n\r\n##### Nested List\r\n\r\nCode:\r\n\r\n    * A\r\n      * A1\r\n      * A2\r\n    * B\r\n    * C\r\n\r\nPreview:\r\n\r\n---\r\n\r\n- A\r\n  - A1\r\n  - A2\r\n- B\r\n- C\r\n\r\n---\r\n\r\n### Code Blocks\r\n\r\nHTML Tag: `\u003Cpre>`\r\n\r\nIndent every line of the block by at least **4 spaces** or **1 tab**.\r\n\r\nCode:\r\n\r\n    This is a normal paragraph:\r\n\r\n        This is a code block.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nThis is a normal paragraph:\r\n\r\n    This is a code block.\r\n\r\n---\r\n\r\nA code block continues until it reaches a line that is not indented (or the end of the article).\r\n\r\nWithin a code block, **_ampersands (&)_** and angle **brackets (\u003C and >)** are automatically converted into HTML entities.\r\n\r\nCode:\r\n\r\n        \u003Cdiv class=\"footer\">\r\n            &copy; 2004 Foo Corporation\r\n        \u003C/div>\r\n\r\nPreview:\r\n\r\n---\r\n\r\n    \u003Cdiv class=\"footer\">\r\n        &copy; 2004 Foo Corporation\r\n    \u003C/div>\r\n\r\n---\r\n\r\nFollowing sections Fenced Code Blocks and Syntax Highlighting are extensions, you can use the other way to write the code block.\r\n\r\n#### Fenced Code Blocks\r\n\r\nJust wrap your code in ` ``` ` (as shown below) and you won't need to indent it by four spaces.\r\n\r\nCode:\r\n\r\n    Here's an example:\r\n\r\n    ```\r\n    function test() {\r\n      console.log(\"notice the blank line before this function?\");\r\n    }\r\n    ```\r\n\r\nPreview:\r\n\r\n---\r\n\r\nHere's an example:\r\n\r\n```\r\nfunction test() {\r\n  console.log(\"notice the blank line before this function?\");\r\n}\r\n```\r\n\r\n---\r\n\r\n#### Syntax Highlighting\r\n\r\nIn your fenced block, add an optional language identifier and we'll run it through syntax highlighting ([Support Languages](https://github.com/github/linguist/blob/master/lib/linguist/languages.yml)).\r\n\r\nCode:\r\n\r\n    ```ruby\r\n    require 'redcarpet'\r\n    markdown = Redcarpet.new(\"Hello World!\")\r\n    puts markdown.to_html\r\n    ```\r\n\r\nPreview:\r\n\r\n---\r\n\r\n```ruby\r\nrequire 'redcarpet'\r\nmarkdown = Redcarpet.new(\"Hello World!\")\r\nputs markdown.to_html\r\n```\r\n\r\n---\r\n\r\n### Horizontal Rules\r\n\r\nHTML Tag: `\u003Chr />`\r\nPlaces **three or more hyphens (-), asterisks (\\*), or underscores (\\_)** on a line by themselves. You may use spaces between the hyphens or asterisks.\r\n\r\nCode:\r\n\r\n    * * *\r\n    ***\r\n    *****\r\n    - - -\r\n    ---------------------------------------\r\n    ___\r\n\r\nPreview:\r\n\r\n---\r\n\r\n---\r\n\r\n---\r\n\r\n---\r\n\r\n---\r\n\r\n---\r\n\r\n---\r\n\r\n---\r\n\r\n### Table\r\n\r\nHTML Tag: `\u003Ctable>`\r\n\r\nIt's an extension.\r\n\r\nSeparates column by **pipe (|)** and header by **dashes (-)**, and uses **colon (:)** for alignment.\r\n\r\nThe outer **pipes (|)** and alignment are optional. There are **3 delimiters** each cell at least for separating header.\r\n\r\nCode:\r\n\r\n```\r\n| Left | Center | Right |\r\n|:-----|:------:|------:|\r\n|aaa   |bbb     |ccc    |\r\n|ddd   |eee     |fff    |\r\n\r\n A | B\r\n---|---\r\n123|456\r\n\r\n\r\nA |B\r\n--|--\r\n12|45\r\n```\r\n\r\nPreview:\r\n\r\n---\r\n\r\n| Left | Center | Right |\r\n| :--- | :----: | ----: |\r\n| aaa  |  bbb   |   ccc |\r\n| ddd  |  eee   |   fff |\r\n\r\n| A   | B   |\r\n| --- | --- |\r\n| 123 | 456 |\r\n\r\n| A   | B   |\r\n| --- | --- |\r\n| 12  | 45  |\r\n\r\n---\r\n\r\n## Span Elements\r\n\r\n### Links\r\n\r\nHTML Tag: `\u003Ca>`\r\n\r\nMarkdown supports two style of links: inline and reference.\r\n\r\n#### Inline\r\n\r\nInline link format like this: `[Link Text](URL \"Title\")`\r\n\r\nTitle is optional.\r\n\r\nCode:\r\n\r\n    This is [an example](http://example.com/ \"Title\") inline link.\r\n\r\n    [This link](http://example.net/) has no title attribute.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nThis is [an example](http://example.com/ \"Title\") inline link.\r\n\r\n[This link](http://example.net/) has no title attribute.\r\n\r\n---\r\n\r\nIf you’re referring to a local resource on the same server, you can use relative paths:\r\n\r\nCode:\r\n\r\n    See my [About](/about/) page for details.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nSee my [About](/about/) page for details.\r\n\r\n---\r\n\r\n#### Reference\r\n\r\nYou could predefine link references. Format like this: `[id]: URL \"Title\"`\r\n\r\nTitle is also optional. And the you refer the link, format like this: `[Link Text][id]`\r\n\r\nCode:\r\n\r\n    [id]: http://example.com/  \"Optional Title Here\"\r\n    This is [an example][id] reference-style link.\r\n\r\nPreview:\r\n\r\n---\r\n\r\n[id]: http://example.com/ \"Optional Title Here\"\r\n\r\nThis is [an example][id] reference-style link.\r\n\r\n---\r\n\r\nThat is:\r\n\r\n- Square brackets containing the link identifier (**not case sensitive**, optionally indented from the left margin using up to three spaces);\r\n- followed by a colon;\r\n- followed by one or more spaces (or tabs);\r\n- followed by the URL for the link;\r\n- The link URL may, optionally, be surrounded by angle brackets.\r\n- optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.\r\n\r\nThe following three link definitions are equivalent:\r\n\r\nCode:\r\n\r\n    [foo]: http://example.com/  \"Optional Title Here\"\r\n    [foo]: http://example.com/  'Optional Title Here'\r\n    [foo]: http://example.com/  (Optional Title Here)\r\n    [foo]: \u003Chttp://example.com/>  \"Optional Title Here\"\r\n\r\nUses an empty set of square brackets, the link text itself is used as the name.\r\n\r\nCode:\r\n\r\n    [Google]: http://google.com/\r\n    [Google][]\r\n\r\nPreview:\r\n\r\n---\r\n\r\n[Google]: http://google.com/\r\n\r\n[Google][]\r\n\r\n---\r\n\r\n### Emphasis\r\n\r\nHTML Tags: `\u003Cem>`, `\u003Cstrong>`\r\n\r\nMarkdown treats **asterisks (\\*)** and **underscores (\\_)** as indicators of emphasis. **One delimiter** will be `\u003Cem>`; \\*_double delimiters_ will be `\u003Cstrong>`.\r\n\r\nCode:\r\n\r\n    *single asterisks*\r\n\r\n    _single underscores_\r\n\r\n    **double asterisks**\r\n\r\n    __double underscores__\r\n\r\nPreview:\r\n\r\n---\r\n\r\n_single asterisks_\r\n\r\n_single underscores_\r\n\r\n**double asterisks**\r\n\r\n**double underscores**\r\n\r\n---\r\n\r\nBut if you surround an \\* or \\_ with spaces, it’ll be treated as a literal asterisk or underscore.\r\n\r\nYou can backslash escape it:\r\n\r\nCode:\r\n\r\n    \\*this text is surrounded by literal asterisks\\*\r\n\r\nPreview:\r\n\r\n---\r\n\r\n\\*this text is surrounded by literal asterisks\\*\r\n\r\n---\r\n\r\n### Code\r\n\r\nHTML Tag: `\u003Ccode>`\r\n\r\nWraps it with **backtick quotes (`)**.\r\n\r\nCode:\r\n\r\n    Use the `printf()` function.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nUse the `printf()` function.\r\n\r\n---\r\n\r\nTo include a literal backtick character within a code span, you can use **multiple backticks** as the opening and closing delimiters:\r\n\r\nCode:\r\n\r\n    ``There is a literal backtick (`) here.``\r\n\r\nPreview:\r\n\r\n---\r\n\r\n``There is a literal backtick (`) here.``\r\n\r\n---\r\n\r\nThe backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:\r\n\r\nCode:\r\n\r\n    A single backtick in a code span: `` ` ``\r\n\r\n    A backtick-delimited string in a code span: `` `foo` ``\r\n\r\nPreview:\r\n\r\n---\r\n\r\nA single backtick in a code span: `` ` ``\r\n\r\nA backtick-delimited string in a code span: `` `foo` ``\r\n\r\n---\r\n\r\n### Images\r\n\r\nHTML Tag: `\u003Cimg />`\r\n\r\nMarkdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference.\r\n\r\n#### Inline\r\n\r\nInline image syntax looks like this: `![Alt text](URL \"Title\")`\r\n\r\nTitle is optional.\r\n\r\nCode:\r\n\r\n    ![Alt text](/path/to/img.jpg)\r\n\r\n    ![Alt text](/path/to/img.jpg \"Optional title\")\r\n\r\nPreview:\r\n\r\n---\r\n\r\n![Alt text](https://s2.loli.net/2024/08/20/5fszgXeOxmL3Wdv.webp)\r\n\r\n![Alt text](https://s2.loli.net/2024/08/20/5fszgXeOxmL3Wdv.webp \"Optional title\")\r\n\r\n---\r\n\r\nThat is:\r\n\r\n- An exclamation mark: !;\r\n- followed by a set of square brackets, containing the alt attribute text for the image;\r\n- followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes.\r\n\r\n#### Reference\r\n\r\nReference-style image syntax looks like this: `![Alt text][id]`\r\n\r\nCode:\r\n\r\n    [img id]: url/to/image  \"Optional title attribute\"\r\n    ![Alt text][img id]\r\n\r\nPreview:\r\n\r\n---\r\n\r\n[img id]: url/to/image \"Optional title attribute\"\r\n\r\n![Alt text][img id]\r\n\r\n---\r\n\r\n### Strikethrough\r\n\r\nHTML Tag: `\u003Cdel>`\r\n\r\nIt's an extension.\r\n\r\nGFM adds syntax to strikethrough text.\r\n\r\nCode:\r\n\r\n```\r\n~~Mistaken text.~~\r\n```\r\n\r\nPreview:\r\n\r\n---\r\n\r\n~~Mistaken text.~~\r\n\r\n---\r\n\r\n## Miscellaneous\r\n\r\n### Automatic Links\r\n\r\nMarkdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets.\r\n\r\nCode:\r\n\r\n    \u003Chttp://example.com/>\r\n\r\n    \u003Caddress@example.com>\r\n\r\nPreview:\r\n\r\n---\r\n\r\n\u003Chttp://example.com/>\r\n\r\n\u003Caddress@example.com>\r\n\r\n---\r\n\r\nGFM will autolink standard URLs.\r\n\r\nCode:\r\n\r\n```\r\nhttps://github.com/emn178/markdown\r\n```\r\n\r\nPreview:\r\n\r\n---\r\n\r\nhttps://github.com/emn178/markdown\r\n\r\n---\r\n\r\n### Backslash Escapes\r\n\r\nMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax.\r\n\r\nCode:\r\n\r\n    \\*literal asterisks\\*\r\n\r\nPreview:\r\n\r\n---\r\n\r\n\\*literal asterisks\\*\r\n\r\n---\r\n\r\nMarkdown provides backslash escapes for the following characters:\r\n\r\nCode:\r\n\r\n    \\   backslash\r\n    `   backtick\r\n    *   asterisk\r\n    _   underscore\r\n    {}  curly braces\r\n    []  square brackets\r\n    ()  parentheses\r\n    #   hash mark\r\n    +   plus sign\r\n    -   minus sign (hyphen)\r\n    .   dot\r\n    !   exclamation mark\r\n\r\n## Inline HTML\r\n\r\nFor any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.\r\n\r\nCode:\r\n\r\n    This is a regular paragraph.\r\n\r\n    \u003Ctable>\r\n        \u003Ctr>\r\n            \u003Ctd>Foo\u003C/td>\r\n        \u003C/tr>\r\n    \u003C/table>\r\n\r\n    This is another regular paragraph.\r\n\r\nPreview:\r\n\r\n---\r\n\r\nThis is a regular paragraph.\r\n\r\n\u003Ctable>\r\n    \u003Ctr>\r\n        \u003Ctd>Foo\u003C/td>\r\n    \u003C/tr>\r\n\u003C/table>\r\n\r\nThis is another regular paragraph.\r\n\r\n---\r\n\r\nNote that Markdown formatting syntax is **not processed within block-level HTML tags**.\r\n\r\nUnlike block-level HTML tags, Markdown syntax is **processed within span-level tags**.\r\n\r\nCode:\r\n\r\n    \u003Cspan>**Work**\u003C/span>\r\n\r\n    \u003Cdiv>\r\n        **No Work**\r\n    \u003C/div>\r\n\r\nPreview:\r\n\r\n---\r\n\r\n\u003Cspan>**Work**\u003C/span>\r\n\r\n\u003Cdiv>\r\n  **No Work**\r\n\u003C/div>\r\n***","src/contents/posts/markdown-tutorial.md",[108],"url/to/image","47bf4e3bd367132a",{"html":111,"metadata":112},"\u003Ch1 id=\"markdown-tutorial\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#markdown-tutorial\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Markdown Tutorial\u003C/h1>\n\u003Cp>A markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF).\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#block-elements\">Block Elements\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#paragraphs-and-line-breaks\">Paragraphs and Line Breaks\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#headers\">Headers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#blockquotes\">Blockquotes\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#lists\">Lists\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#code-blocks\">Code Blocks\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#horizontal-rules\">Horizontal Rules\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#table\">Table\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#span-elements\">Span Elements\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#links\">Links\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#emphasis\">Emphasis\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#code\">Code\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#images\">Images\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#strikethrough\">Strikethrough\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#miscellaneous\">Miscellaneous\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#automatic-links\">Automatic Links\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#backslash-escapes\">Backslash Escapes\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#inline-html\">Inline HTML\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"block-elements\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#block-elements\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Block Elements\u003C/h2>\n\u003Ch3 id=\"paragraphs-and-line-breaks\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#paragraphs-and-line-breaks\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Paragraphs and Line Breaks\u003C/h3>\n\u003Ch4 id=\"paragraphs\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#paragraphs\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Paragraphs\u003C/h4>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;p>\u003C/code>\u003C/p>\n\u003Cp>One or more blank lines. (A blank line is a line containing nothing but \u003Cstrong>spaces\u003C/strong> or \u003Cstrong>tabs\u003C/strong> is considered blank.)\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This will be\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>inline.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>This is second paragraph.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>This will be\r\ninline.\u003C/p>\n\u003Cp>This is second paragraph.\u003C/p>\n\u003Chr>\n\u003Ch4 id=\"line-breaks\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#line-breaks\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Line Breaks\u003C/h4>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;br />\u003C/code>\u003C/p>\n\u003Cp>End a line with \u003Cstrong>two or more spaces\u003C/strong>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This will be not\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>inline.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>This will be not\u003Cbr>\ninline.\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"headers\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#headers\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Headers\u003C/h3>\n\u003Cp>Markdown supports two styles of headers, Setext and atx.\u003C/p>\n\u003Ch4 id=\"setext\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#setext\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Setext\u003C/h4>\n\u003Cp>HTML Tags: \u003Ccode>&#x3C;h1>\u003C/code>, \u003Ccode>&#x3C;h2>\u003C/code>\u003C/p>\n\u003Cp>“Underlined” using \u003Cstrong>equal signs (=)\u003C/strong> as \u003Ccode>&#x3C;h1>\u003C/code> and \u003Cstrong>dashes (-)\u003C/strong> as \u003Ccode>&#x3C;h2>\u003C/code> in any number.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This is an H1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>=============\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>This is an H2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-------------\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Ch1 id=\"this-is-an-h1\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h1\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H1\u003C/h1>\n\u003Ch2 id=\"this-is-an-h2\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h2\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H2\u003C/h2>\n\u003Chr>\n\u003Ch4 id=\"atx\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#atx\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>atx\u003C/h4>\n\u003Cp>HTML Tags: \u003Ccode>&#x3C;h1>\u003C/code>, \u003Ccode>&#x3C;h2>\u003C/code>, \u003Ccode>&#x3C;h3>\u003C/code>, \u003Ccode>&#x3C;h4>\u003C/code>, \u003Ccode>&#x3C;h5>\u003C/code>, \u003Ccode>&#x3C;h6>\u003C/code>\u003C/p>\n\u003Cp>Uses 1-6 \u003Cstrong>hash characters (#)\u003C/strong> at the start of the line, corresponding to \u003Ccode>&#x3C;h1>\u003C/code> - \u003Ccode>&#x3C;h6>\u003C/code>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan># This is an H1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>## This is an H2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>###### This is an H6\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Ch1 id=\"this-is-an-h1-1\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h1-1\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H1\u003C/h1>\n\u003Ch2 id=\"this-is-an-h2-1\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h2-1\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H2\u003C/h2>\n\u003Ch6 id=\"this-is-an-h6\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h6\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H6\u003C/h6>\n\u003Chr>\n\u003Cp>Optionally, you may “close” atx-style headers. The closing hashes \u003Cstrong>don’t need to match\u003C/strong> the number of hashes used to open the header.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan># This is an H1 #\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>## This is an H2 ##\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>### This is an H3 ######\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Ch1 id=\"this-is-an-h1-2\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h1-2\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H1\u003C/h1>\n\u003Ch2 id=\"this-is-an-h2-2\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h2-2\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H2\u003C/h2>\n\u003Ch3 id=\"this-is-an-h3\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-an-h3\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is an H3\u003C/h3>\n\u003Chr>\n\u003Ch3 id=\"blockquotes\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#blockquotes\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Blockquotes\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;blockquote>\u003C/code>\u003C/p>\n\u003Cp>Markdown uses email-style \u003Cstrong>>\u003C/strong> characters for blockquoting. It looks best if you hard wrap the text and put a > before every line.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> id sem consectetuer libero luctus adipiscing.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cblockquote>\n\u003Cp>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\u003C/p>\n\u003Cp>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\nid sem consectetuer libero luctus adipiscing.\u003C/p>\n\u003C/blockquote>\n\u003Chr>\n\u003Cp>Markdown allows you to be lazy and only put the > before the first line of a hard-wrapped paragraph.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>id sem consectetuer libero luctus adipiscing.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cblockquote>\n\u003Cp>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\r\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\r\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\r\nid sem consectetuer libero luctus adipiscing.\u003C/p>\n\u003C/blockquote>\n\u003Chr>\n\u003Cp>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of >.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>> This is the first level of quoting.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> > This is nested blockquote.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> Back to the first level.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cblockquote>\n\u003Cp>This is the first level of quoting.\u003C/p>\n\u003Cblockquote>\n\u003Cp>This is nested blockquote.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Back to the first level.\u003C/p>\n\u003C/blockquote>\n\u003Chr>\n\u003Cp>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>> ## This is a header.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> 1.   This is the first list item.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> 2.   This is the second list item.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>> Here's some example code:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>>     return shell_exec(\"echo $input | $markdown_script\");\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cblockquote>\n\u003Ch2 id=\"this-is-a-header\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#this-is-a-header\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>This is a header.\u003C/h2>\n\u003Col>\n\u003Cli>This is the first list item.\u003C/li>\n\u003Cli>This is the second list item.\u003C/li>\n\u003C/ol>\n\u003Cp>Here’s some example code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>return shell_exec(\"echo $input | $markdown_script\");\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/blockquote>\n\u003Chr>\n\u003Ch3 id=\"lists\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#lists\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Lists\u003C/h3>\n\u003Cp>Markdown supports ordered (numbered) and unordered (bulleted) lists.\u003C/p>\n\u003Ch4 id=\"unordered\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#unordered\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Unordered\u003C/h4>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;ul>\u003C/code>\u003C/p>\n\u003Cp>Unordered lists use \u003Cstrong>asterisks (*)\u003C/strong>, \u003Cstrong>pluses (+)\u003C/strong>, and \u003Cstrong>hyphens (-)\u003C/strong>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>*   Red\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>*   Green\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>*   Blue\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cul>\n\u003Cli>Red\u003C/li>\n\u003Cli>Green\u003C/li>\n\u003Cli>Blue\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>is equivalent to:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>+   Red\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+   Green\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+   Blue\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>and:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>-   Red\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-   Green\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-   Blue\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"ordered\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#ordered\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Ordered\u003C/h4>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;ol>\u003C/code>\u003C/p>\n\u003Cp>Ordered lists use numbers followed by periods:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>1.  Bird\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>2.  McHale\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>3.  Parish\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Col>\n\u003Cli>Bird\u003C/li>\n\u003Cli>McHale\u003C/li>\n\u003Cli>Parish\u003C/li>\n\u003C/ol>\n\u003Chr>\n\u003Cp>It’s possible to trigger an ordered list by accident, by writing something like this:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>1986. What a great season.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Col start=\"1986\">\n\u003Cli>What a great season.\u003C/li>\n\u003C/ol>\n\u003Chr>\n\u003Cp>You can \u003Cstrong>backslash-escape (\\)\u003C/strong> the period:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>1986\\. What a great season.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>1986. What a great season.\u003C/p>\n\u003Chr>\n\u003Ch4 id=\"indented\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#indented\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Indented\u003C/h4>\n\u003Ch5 id=\"blockquote\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#blockquote\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Blockquote\u003C/h5>\n\u003Cp>To put a blockquote within a list item, the blockquote’s > delimiters need to be indented:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>*   A list item with a blockquote:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    > This is a blockquote\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    > inside a list item.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cul>\n\u003Cli>\n\u003Cp>A list item with a blockquote:\u003C/p>\n\u003Cblockquote>\n\u003Cp>This is a blockquote\r\ninside a list item.\u003C/p>\n\u003C/blockquote>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch5 id=\"code-block\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#code-block\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Code Block\u003C/h5>\n\u003Cp>To put a code block within a list item, the code block needs to be indented twice — \u003Cstrong>8 spaces\u003C/strong> or \u003Cstrong>two tabs\u003C/strong>:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>*   A list item with a code block:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        &#x3C;code goes here>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cul>\n\u003Cli>\n\u003Cp>A list item with a code block:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>&#x3C;code goes here>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch5 id=\"nested-list\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#nested-list\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Nested List\u003C/h5>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>* A\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  * A1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  * A2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>* B\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>* C\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cul>\n\u003Cli>A\n\u003Cul>\n\u003Cli>A1\u003C/li>\n\u003Cli>A2\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>B\u003C/li>\n\u003Cli>C\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch3 id=\"code-blocks\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#code-blocks\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Code Blocks\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;pre>\u003C/code>\u003C/p>\n\u003Cp>Indent every line of the block by at least \u003Cstrong>4 spaces\u003C/strong> or \u003Cstrong>1 tab\u003C/strong>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This is a normal paragraph:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    This is a code block.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>This is a normal paragraph:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This is a code block.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Cp>A code block continues until it reaches a line that is not indented (or the end of the article).\u003C/p>\n\u003Cp>Within a code block, \u003Cstrong>\u003Cem>ampersands (&#x26;)\u003C/em>\u003C/strong> and angle \u003Cstrong>brackets (&#x3C; and >)\u003C/strong> are automatically converted into HTML entities.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>    &#x3C;div class=\"footer\">\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        &#x26;copy; 2004 Foo Corporation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    &#x3C;/div>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>&#x3C;div class=\"footer\">\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    &#x26;copy; 2004 Foo Corporation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>&#x3C;/div>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Cp>Following sections Fenced Code Blocks and Syntax Highlighting are extensions, you can use the other way to write the code block.\u003C/p>\n\u003Ch4 id=\"fenced-code-blocks\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#fenced-code-blocks\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Fenced Code Blocks\u003C/h4>\n\u003Cp>Just wrap your code in \u003Ccode>```\u003C/code> (as shown below) and you won’t need to indent it by four spaces.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Here's an example:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>```\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>function test() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  console.log(\"notice the blank line before this function?\");\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>```\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>Here’s an example:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function test() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  console.log(\"notice the blank line before this function?\");\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch4 id=\"syntax-highlighting\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#syntax-highlighting\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Syntax Highlighting\u003C/h4>\n\u003Cp>In your fenced block, add an optional language identifier and we’ll run it through syntax highlighting (\u003Ca href=\"https://github.com/github/linguist/blob/master/lib/linguist/languages.yml\">Support Languages\u003C/a>).\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>```ruby\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>require 'redcarpet'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>markdown = Redcarpet.new(\"Hello World!\")\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>puts markdown.to_html\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>```\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"ruby\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF7B72\">require\u003C/span>\u003Cspan style=\"color:#A5D6FF\"> 'redcarpet'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFA657\">markdown\u003C/span>\u003Cspan style=\"color:#E6EDF3\"> = \u003C/span>\u003Cspan style=\"color:#79C0FF\">Redcarpet\u003C/span>\u003Cspan style=\"color:#E6EDF3\">.\u003C/span>\u003Cspan style=\"color:#FF7B72\">new\u003C/span>\u003Cspan style=\"color:#E6EDF3\">(\u003C/span>\u003Cspan style=\"color:#A5D6FF\">\"Hello World!\"\u003C/span>\u003Cspan style=\"color:#E6EDF3\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79C0FF\">puts\u003C/span>\u003Cspan style=\"color:#E6EDF3\"> markdown.\u003C/span>\u003Cspan style=\"color:#D2A8FF\">to_html\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch3 id=\"horizontal-rules\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#horizontal-rules\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Horizontal Rules\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;hr />\u003C/code>\r\nPlaces \u003Cstrong>three or more hyphens (-), asterisks (*), or underscores (_)\u003C/strong> on a line by themselves. You may use spaces between the hyphens or asterisks.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>* * *\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>***\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>*****\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>- - -\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>---------------------------------------\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>___\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Ch3 id=\"table\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#table\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Table\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;table>\u003C/code>\u003C/p>\n\u003Cp>It’s an extension.\u003C/p>\n\u003Cp>Separates column by \u003Cstrong>pipe (|)\u003C/strong> and header by \u003Cstrong>dashes (-)\u003C/strong>, and uses \u003Cstrong>colon (:)\u003C/strong> for alignment.\u003C/p>\n\u003Cp>The outer \u003Cstrong>pipes (|)\u003C/strong> and alignment are optional. There are \u003Cstrong>3 delimiters\u003C/strong> each cell at least for separating header.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>| Left | Center | Right |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|:-----|:------:|------:|\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|aaa   |bbb     |ccc    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|ddd   |eee     |fff    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan> A | B\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>---|---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>123|456\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>A |B\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>--|--\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>12|45\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth align=\"left\">Left\u003C/th>\u003Cth align=\"center\">Center\u003C/th>\u003Cth align=\"right\">Right\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd align=\"left\">aaa\u003C/td>\u003Ctd align=\"center\">bbb\u003C/td>\u003Ctd align=\"right\">ccc\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd align=\"left\">ddd\u003C/td>\u003Ctd align=\"center\">eee\u003C/td>\u003Ctd align=\"right\">fff\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>A\u003C/th>\u003Cth>B\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>123\u003C/td>\u003Ctd>456\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>A\u003C/th>\u003Cth>B\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>12\u003C/td>\u003Ctd>45\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Chr>\n\u003Ch2 id=\"span-elements\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#span-elements\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Span Elements\u003C/h2>\n\u003Ch3 id=\"links\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#links\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Links\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;a>\u003C/code>\u003C/p>\n\u003Cp>Markdown supports two style of links: inline and reference.\u003C/p>\n\u003Ch4 id=\"inline\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#inline\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Inline\u003C/h4>\n\u003Cp>Inline link format like this: \u003Ccode>[Link Text](URL \"Title\")\u003C/code>\u003C/p>\n\u003Cp>Title is optional.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This is [an example](http://example.com/ \"Title\") inline link.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[This link](http://example.net/) has no title attribute.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>This is \u003Ca href=\"http://example.com/\" title=\"Title\">an example\u003C/a> inline link.\u003C/p>\n\u003Cp>\u003Ca href=\"http://example.net/\">This link\u003C/a> has no title attribute.\u003C/p>\n\u003Chr>\n\u003Cp>If you’re referring to a local resource on the same server, you can use relative paths:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>See my [About](/about/) page for details.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>See my \u003Ca href=\"/about/\">About\u003C/a> page for details.\u003C/p>\n\u003Chr>\n\u003Ch4 id=\"reference\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#reference\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Reference\u003C/h4>\n\u003Cp>You could predefine link references. Format like this: \u003Ccode>[id]: URL \"Title\"\u003C/code>\u003C/p>\n\u003Cp>Title is also optional. And the you refer the link, format like this: \u003Ccode>[Link Text][id]\u003C/code>\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>[id]: http://example.com/  \"Optional Title Here\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>This is [an example][id] reference-style link.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>This is \u003Ca href=\"http://example.com/\" title=\"Optional Title Here\">an example\u003C/a> reference-style link.\u003C/p>\n\u003Chr>\n\u003Cp>That is:\u003C/p>\n\u003Cul>\n\u003Cli>Square brackets containing the link identifier (\u003Cstrong>not case sensitive\u003C/strong>, optionally indented from the left margin using up to three spaces);\u003C/li>\n\u003Cli>followed by a colon;\u003C/li>\n\u003Cli>followed by one or more spaces (or tabs);\u003C/li>\n\u003Cli>followed by the URL for the link;\u003C/li>\n\u003Cli>The link URL may, optionally, be surrounded by angle brackets.\u003C/li>\n\u003Cli>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.\u003C/li>\n\u003C/ul>\n\u003Cp>The following three link definitions are equivalent:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>[foo]: http://example.com/  \"Optional Title Here\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[foo]: http://example.com/  'Optional Title Here'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[foo]: http://example.com/  (Optional Title Here)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[foo]: &#x3C;http://example.com/>  \"Optional Title Here\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Uses an empty set of square brackets, the link text itself is used as the name.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>[Google]: http://google.com/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[Google][]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Ca href=\"http://google.com/\">Google\u003C/a>\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"emphasis\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#emphasis\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Emphasis\u003C/h3>\n\u003Cp>HTML Tags: \u003Ccode>&#x3C;em>\u003C/code>, \u003Ccode>&#x3C;strong>\u003C/code>\u003C/p>\n\u003Cp>Markdown treats \u003Cstrong>asterisks (*)\u003C/strong> and \u003Cstrong>underscores (_)\u003C/strong> as indicators of emphasis. \u003Cstrong>One delimiter\u003C/strong> will be \u003Ccode>&#x3C;em>\u003C/code>; *\u003Cem>double delimiters\u003C/em> will be \u003Ccode>&#x3C;strong>\u003C/code>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>*single asterisks*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>_single underscores_\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>**double asterisks**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>__double underscores__\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>single asterisks\u003C/em>\u003C/p>\n\u003Cp>\u003Cem>single underscores\u003C/em>\u003C/p>\n\u003Cp>\u003Cstrong>double asterisks\u003C/strong>\u003C/p>\n\u003Cp>\u003Cstrong>double underscores\u003C/strong>\u003C/p>\n\u003Chr>\n\u003Cp>But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore.\u003C/p>\n\u003Cp>You can backslash escape it:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>\\*this text is surrounded by literal asterisks\\*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>*this text is surrounded by literal asterisks*\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"code\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#code\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Code\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;code>\u003C/code>\u003C/p>\n\u003Cp>Wraps it with \u003Cstrong>backtick quotes (`)\u003C/strong>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Use the `printf()` function.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>Use the \u003Ccode>printf()\u003C/code> function.\u003C/p>\n\u003Chr>\n\u003Cp>To include a literal backtick character within a code span, you can use \u003Cstrong>multiple backticks\u003C/strong> as the opening and closing delimiters:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>``There is a literal backtick (`) here.``\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Ccode>There is a literal backtick (`) here.\u003C/code>\u003C/p>\n\u003Chr>\n\u003Cp>The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>A single backtick in a code span: `` ` ``\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>A backtick-delimited string in a code span: `` `foo` ``\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>A single backtick in a code span: \u003Ccode>`\u003C/code>\u003C/p>\n\u003Cp>A backtick-delimited string in a code span: \u003Ccode>`foo`\u003C/code>\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"images\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#images\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Images\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;img />\u003C/code>\u003C/p>\n\u003Cp>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference.\u003C/p>\n\u003Ch4 id=\"inline-1\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#inline-1\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Inline\u003C/h4>\n\u003Cp>Inline image syntax looks like this: \u003Ccode>![Alt text](URL \"Title\")\u003C/code>\u003C/p>\n\u003Cp>Title is optional.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>![Alt text](/path/to/img.jpg)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>![Alt text](/path/to/img.jpg \"Optional title\")\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cimg src=\"https://s2.loli.net/2024/08/20/5fszgXeOxmL3Wdv.webp\" alt=\"Alt text\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://s2.loli.net/2024/08/20/5fszgXeOxmL3Wdv.webp\" alt=\"Alt text\" title=\"Optional title\">\u003C/p>\n\u003Chr>\n\u003Cp>That is:\u003C/p>\n\u003Cul>\n\u003Cli>An exclamation mark: !;\u003C/li>\n\u003Cli>followed by a set of square brackets, containing the alt attribute text for the image;\u003C/li>\n\u003Cli>followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"reference-1\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#reference-1\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Reference\u003C/h4>\n\u003Cp>Reference-style image syntax looks like this: \u003Ccode>![Alt text][id]\u003C/code>\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>[img id]: url/to/image  \"Optional title attribute\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>![Alt text][img id]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;url/to/image&#x22;,&#x22;alt&#x22;:&#x22;Alt text&#x22;,&#x22;title&#x22;:&#x22;Optional title attribute&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"strikethrough\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#strikethrough\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Strikethrough\u003C/h3>\n\u003Cp>HTML Tag: \u003Ccode>&#x3C;del>\u003C/code>\u003C/p>\n\u003Cp>It’s an extension.\u003C/p>\n\u003Cp>GFM adds syntax to strikethrough text.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>~~Mistaken text.~~\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cdel>Mistaken text.\u003C/del>\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"miscellaneous\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#miscellaneous\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Miscellaneous\u003C/h2>\n\u003Ch3 id=\"automatic-links\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#automatic-links\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Automatic Links\u003C/h3>\n\u003Cp>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>&#x3C;http://example.com/>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>&#x3C;address@example.com>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Ca href=\"http://example.com/\">http://example.com/\u003C/a>\u003C/p>\n\u003Cp>\u003Ca href=\"mailto:address@example.com\">address@example.com\u003C/a>\u003C/p>\n\u003Chr>\n\u003Cp>GFM will autolink standard URLs.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>https://github.com/emn178/markdown\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Ca href=\"https://github.com/emn178/markdown\">https://github.com/emn178/markdown\u003C/a>\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"backslash-escapes\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#backslash-escapes\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Backslash Escapes\u003C/h3>\n\u003Cp>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>\\*literal asterisks\\*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>*literal asterisks*\u003C/p>\n\u003Chr>\n\u003Cp>Markdown provides backslash escapes for the following characters:\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>\\   backslash\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>`   backtick\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>*   asterisk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>_   underscore\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>{}  curly braces\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[]  square brackets\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>()  parentheses\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>#   hash mark\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+   plus sign\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-   minus sign (hyphen)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>.   dot\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>!   exclamation mark\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"inline-html\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#inline-html\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Inline HTML\u003C/h2>\n\u003Cp>For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>This is a regular paragraph.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>&#x3C;table>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    &#x3C;tr>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        &#x3C;td>Foo&#x3C;/td>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    &#x3C;/tr>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>&#x3C;/table>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>This is another regular paragraph.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>This is a regular paragraph.\u003C/p>\n\u003Ctable>\n    \u003Ctbody>\u003Ctr>\n        \u003Ctd>Foo\u003C/td>\n    \u003C/tr>\n\u003C/tbody>\u003C/table>\n\u003Cp>This is another regular paragraph.\u003C/p>\n\u003Chr>\n\u003Cp>Note that Markdown formatting syntax is \u003Cstrong>not processed within block-level HTML tags\u003C/strong>.\u003C/p>\n\u003Cp>Unlike block-level HTML tags, Markdown syntax is \u003Cstrong>processed within span-level tags\u003C/strong>.\u003C/p>\n\u003Cp>Code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>&#x3C;span>**Work**&#x3C;/span>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>&#x3C;div>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    **No Work**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>&#x3C;/div>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Preview:\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cspan>\u003Cstrong>Work\u003C/strong>\u003C/span>\u003C/p>\n\u003Cdiv>\n  **No Work**\n\u003C/div>\n***",{"headings":113,"imagePaths":240,"frontmatter":241},[114,115,118,121,125,128,131,134,137,140,142,144,146,150,152,154,157,160,163,166,169,172,175,179,182,185,188,191,194,197,200,203,206,209,212,215,218,221,223,225,228,231,234,237],{"depth":15,"slug":96,"text":99},{"depth":49,"slug":116,"text":117},"block-elements","Block Elements",{"depth":84,"slug":119,"text":120},"paragraphs-and-line-breaks","Paragraphs and Line Breaks",{"depth":122,"slug":123,"text":124},4,"paragraphs","Paragraphs",{"depth":122,"slug":126,"text":127},"line-breaks","Line Breaks",{"depth":84,"slug":129,"text":130},"headers","Headers",{"depth":122,"slug":132,"text":133},"setext","Setext",{"depth":15,"slug":135,"text":136},"this-is-an-h1","This is an H1",{"depth":49,"slug":138,"text":139},"this-is-an-h2","This is an H2",{"depth":122,"slug":141,"text":141},"atx",{"depth":15,"slug":143,"text":136},"this-is-an-h1-1",{"depth":49,"slug":145,"text":139},"this-is-an-h2-1",{"depth":147,"slug":148,"text":149},6,"this-is-an-h6","This is an H6",{"depth":15,"slug":151,"text":136},"this-is-an-h1-2",{"depth":49,"slug":153,"text":139},"this-is-an-h2-2",{"depth":84,"slug":155,"text":156},"this-is-an-h3","This is an H3",{"depth":84,"slug":158,"text":159},"blockquotes","Blockquotes",{"depth":49,"slug":161,"text":162},"this-is-a-header","This is a header.",{"depth":84,"slug":164,"text":165},"lists","Lists",{"depth":122,"slug":167,"text":168},"unordered","Unordered",{"depth":122,"slug":170,"text":171},"ordered","Ordered",{"depth":122,"slug":173,"text":174},"indented","Indented",{"depth":176,"slug":177,"text":178},5,"blockquote","Blockquote",{"depth":176,"slug":180,"text":181},"code-block","Code Block",{"depth":176,"slug":183,"text":184},"nested-list","Nested List",{"depth":84,"slug":186,"text":187},"code-blocks","Code Blocks",{"depth":122,"slug":189,"text":190},"fenced-code-blocks","Fenced Code Blocks",{"depth":122,"slug":192,"text":193},"syntax-highlighting","Syntax Highlighting",{"depth":84,"slug":195,"text":196},"horizontal-rules","Horizontal Rules",{"depth":84,"slug":198,"text":199},"table","Table",{"depth":49,"slug":201,"text":202},"span-elements","Span Elements",{"depth":84,"slug":204,"text":205},"links","Links",{"depth":122,"slug":207,"text":208},"inline","Inline",{"depth":122,"slug":210,"text":211},"reference","Reference",{"depth":84,"slug":213,"text":214},"emphasis","Emphasis",{"depth":84,"slug":216,"text":217},"code","Code",{"depth":84,"slug":219,"text":220},"images","Images",{"depth":122,"slug":222,"text":208},"inline-1",{"depth":122,"slug":224,"text":211},"reference-1",{"depth":84,"slug":226,"text":227},"strikethrough","Strikethrough",{"depth":49,"slug":229,"text":230},"miscellaneous","Miscellaneous",{"depth":84,"slug":232,"text":233},"automatic-links","Automatic Links",{"depth":84,"slug":235,"text":236},"backslash-escapes","Backslash Escapes",{"depth":49,"slug":238,"text":239},"inline-html","Inline HTML",[108],{"title":99,"published":242,"description":66,"tags":243,"category":40,"licenseName":104,"author":102,"sourceLink":103,"draft":35,"readingMetadata":244},["Date","2025-01-20T00:00:00.000Z"],[68,69],{"time":245,"wordCount":246},9,1700]